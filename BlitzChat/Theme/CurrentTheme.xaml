<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mods="clr-namespace:BlitzChat.Models"
                    xmlns:bc="clr-namespace:BlitzChat"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
   
    <SolidColorBrush x:Key="NicknameColor" Color="White"/>
    <FontFamily x:Key="NicknameFont">Arial</FontFamily>

    <!-- Style for DateTime -->
    <Style x:Key="styleDateTime" TargetType="{x:Type Run}">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="IsEnabled" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
    </Style>

    <!-- Style for Nickname -->
    <Style x:Key="styleNickname" TargetType="{x:Type Run}">
        <Setter Property="FontFamily" Value="{DynamicResource NicknameFont}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource NicknameColor}"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!-- Style for Message -->
    <Style x:Key="styleText" TargetType="{x:Type Run}">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!-- Style for ToName -->
    <Style x:Key="styleToName" TargetType="{x:Type Run}">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!-- Images in Message -->
    <Style TargetType="{x:Type InlineUIContainer}">
        <Setter Property="BaselineAlignment" Value="Bottom"/>
    </Style>
    <!-- Each message is new TextBlock -->
    <Style TargetType="{x:Type mods:MessageTextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Margin" Value="0, 0, 0, 0"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From="0" To="1" RepeatBehavior="0:0:0.7" Duration="0:0:0.7" Storyboard.TargetProperty="Opacity" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!-- Vertical Scrollbar width -->
    <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">10</sys:Double>
    
    <!--Context Menu-->
    <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Background="#FF00BFBF" BorderBrush="#FF00BFBF" BorderThickness="0.6">
                        <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Context Menu -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" >
            <Grid>
                <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="White"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>