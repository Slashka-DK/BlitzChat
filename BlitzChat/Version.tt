<#@ template hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ import namespace="System.IO" #>
<#
	int buildNumber = (int)(DateTime.UtcNow - new DateTime(2014,9,1)).TotalDays;
	int revisionNumber = 0;
	try
    {
        //If we cannot find the file, the revision number is set to zero,
        //so even if the file doesn't exists the generation will run anyway.
        //NOTE: we suppose we're not messing with the generated file
        using(var f = File.OpenText(Host.ResolvePath("Version.cs")))
        {
            //We're reading the previous revision number; in order to make the
            //code as simple as we can, we're just going to rewrite it on the first row, commented.
            //This is not elegant, but it's simple enough and quite effective.
            string rev = f.ReadLine().Replace("//","");
			string bui = f.ReadLine().Replace("//","");
			if(int.Parse(bui) < buildNumber)
				revisionNumber = 0;
			else
				revisionNumber = int.Parse(rev) + 1;
		}
    }catch
    {     
        revisionNumber = 0; 
    }
#>
//<#=revisionNumber#>
//<#=buildNumber#>
// This code was generated by a tool. Any changes made manually will be lost
// the next time this code is regenerated.
// 

using System.Reflection;

[assembly: AssemblyFileVersion("1.0.<#= buildNumber #>.<#= revisionNumber #>")]
[assembly: AssemblyVersion("1.0.<#= buildNumber #>.<#= revisionNumber #>")]