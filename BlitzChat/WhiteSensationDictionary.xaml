<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:ctrl="clr-namespace:TwoRatChat.Controls;assembly=TwoRatChat"
                    xmlns:loc="clr-namespace:TwoRatChat.Properties;assembly=TwoRatChat"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--
      Этот скин, не стоит менять. Так как он будет перезаписан
      при следующем запуске программы.
      
      Если вы хотите его изменить, сделайте копию, и меняйте ее 
      сколько угодно.
    -->
  
  
    <!-- Системная область. Не трогать. -->
    <ctrl:GetHalfValueConverter x:Key="d2" />
    <ctrl:BrandConverter x:Key="bc" />
    <ctrl:BoolToVisibilityConverter x:Key="b2v" />

    <!-- Системный контейнер чата. Не трогать. -->
    <ControlTemplate x:Key="SystemChatContent" TargetType="{x:Type ListBox}">
        <Grid>
            <ctrl:AnimatedScrollViewer Background="Transparent" Focusable="false">
                <ItemsPresenter />
            </ctrl:AnimatedScrollViewer>
        </Grid>
    </ControlTemplate>

    <!-- Системный контейнер BrandIcon'ок. Не трогать. -->
    <ControlTemplate x:Key="HeaderContent" TargetType="{x:Type ListBox}">
        <Grid>
            <ItemsPresenter />
        </Grid>
    </ControlTemplate>

    <SolidColorBrush x:Key="BorderBackground" Color="#841E4E" />

    <Style TargetType="{x:Type GridSplitter}">
        <Setter Property="Height" Value="2" />
        <Setter Property="Margin" Value="2,0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="#88000000" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
    </Style>

    <!-- Полоса прокрутки -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{StaticResource BorderBackground}"
                            Width="6" CornerRadius="3" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Полоса прокрутки -->
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Border Grid.RowSpan="3" CornerRadius="2" Width="2" 
                    Background="Black" HorizontalAlignment="Center" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
            </Track>
        </Grid>
    </ControlTemplate>

    <!-- Полоса прокрутки -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="18" />
                <!-- Да зачем нам дизайнерить то что никто никогда не увидит? -->
                <!--<Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />-->
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="10"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontFamily" Value="Webdings" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root" Margin="0,2">
                        <Rectangle x:Name="btn2" Stroke="{StaticResource BorderBackground}" Fill="#99ffffff" 
                                 Visibility="Visible" StrokeThickness="1" />
                        <Rectangle x:Name="btn" Stroke="{StaticResource BorderBackground}" StrokeThickness="1" 
                                 Visibility="Hidden" >
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0.1,0.1" SpreadMethod="Repeat">
                                    <LinearGradientBrush.Transform>
                                        <TranslateTransform x:Name="trans" X="0" />
                                    </LinearGradientBrush.Transform>
                                    <GradientStop Color="#99ffffff" Offset="0.0" />
                                    <GradientStop Color="#99ffffff" Offset="0.5" />
                                    <GradientStop Color="#99000000" Offset="0.5" />
                                    <GradientStop Color="#99000000" Offset="1.0" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <TextBlock x:Name="txt" Margin="{TemplateBinding Padding}" 
                                           FontFamily="{TemplateBinding FontFamily}" Text="{TemplateBinding Content}" 
                                           Foreground="Black" FontSize="{TemplateBinding FontSize}"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" >
                            <TextBlock.RenderTransform>
                                <RotateTransform x:Name="rot" 
                                                     CenterX="{Binding ElementName=txt, Path=ActualWidth, Converter={StaticResource d2}}"
                                                     CenterY="{Binding ElementName=txt, Path=ActualHeight, Converter={StaticResource d2}}" />
                            </TextBlock.RenderTransform>
                        </TextBlock>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="btn2" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="btn" Property="Visibility" Value="Visible" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation To="50" Duration="00:00:01"
                                                Storyboard.TargetName="trans" Storyboard.TargetProperty="X" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="0" Duration="00:00:01"
                                                Storyboard.TargetName="trans" Storyboard.TargetProperty="X" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btn" Property="Fill" Value="#55000000" />
                            <Setter TargetName="txt" Property="Margin" Value="0,1,0,-1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SmallButton" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontFamily" Value="Webdings" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="root" Margin="0,2">
                        <Rectangle x:Name="btn" Stroke="{StaticResource BorderBackground}" StrokeThickness="1" 
                                 Visibility="Hidden" >
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0.1,0.1" SpreadMethod="Repeat">
                                    <LinearGradientBrush.Transform>
                                        <TranslateTransform x:Name="trans" X="0" />
                                    </LinearGradientBrush.Transform>
                                    <GradientStop Color="#99ffffff" Offset="0.0" />
                                    <GradientStop Color="#99ffffff" Offset="0.5" />
                                    <GradientStop Color="#99000000" Offset="0.5" />
                                    <GradientStop Color="#99000000" Offset="1.0" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <TextBlock x:Name="txt" Margin="{TemplateBinding Padding}" 
                                           FontFamily="{TemplateBinding FontFamily}" Text="{TemplateBinding Content}" 
                                           Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" >
                            <TextBlock.RenderTransform>
                                <RotateTransform x:Name="rot" 
                                                     CenterX="{Binding ElementName=txt, Path=ActualWidth, Converter={StaticResource d2}}"
                                                     CenterY="{Binding ElementName=txt, Path=ActualHeight, Converter={StaticResource d2}}" />
                            </TextBlock.RenderTransform>
                        </TextBlock>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="btn" Property="Visibility" Value="Visible" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation To="50" Duration="00:00:01"
                                                Storyboard.TargetName="trans" Storyboard.TargetProperty="X" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="0" Duration="00:00:01"
                                                Storyboard.TargetName="trans" Storyboard.TargetProperty="X" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btn" Property="Fill" Value="#55000000" />
                            <Setter TargetName="txt" Property="Margin" Value="0,1,0,-1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextStyle" TargetType="{x:Type Label}" >
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="FontSize" Value="{Binding Source={x:Static loc:Settings.Default}, Path=GlobalFontSize, Mode=OneWay}" />
        <Setter Property="FontFamily" Value="Arial, Helvetica, Sans-serif" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Foreground" 
                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ctrl:TextControl}}, Path=Foreground}" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <!--<Setter Property="TextOptions.TextHintingMode" Value="Fixed" />-->
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="VerticalAlignment" Value="Bottom" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid>
                        <TextBlock Text="{TemplateBinding Content}" Margin="0,-1,0,1"
                                   Foreground="#ff000000" />

                        <TextBlock Text="{TemplateBinding Content}" Margin="0,1,0,-1"
                                   Foreground="#ffffffff" />

                        <TextBlock Text="{TemplateBinding Content}" 
                               Foreground="{TemplateBinding Foreground}" >
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CommonLabelStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource TextStyle}" >
      <Setter Property="Foreground" Value="Black" />
    </Style>

    <Style x:Key="LabelNameStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource TextStyle}" >
        <Setter Property="Foreground" Value="#452041" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="ToStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource TextStyle}" >
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="LabelLinkStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource TextStyle}" >
        <Setter Property="Foreground" Value="#c57c08" />
        <Setter Property="IsHitTestVisible" Value="true" />
    </Style>

    <Style x:Key="LabelTextStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource TextStyle}" >
    </Style>

    <Style x:Key="SmileStyle" TargetType="Image">
        <Setter Property="Height" Value="{Binding Source={x:Static loc:Settings.Default}, Path=GlobalSH, Mode=OneWay}" />
    </Style>

    <DataTemplate x:Key="MessageTemplate">
        <Grid x:Name="root">
            <Grid.RenderTransform>
                <ScaleTransform x:Name="scale" 
                                ScaleX="1" ScaleY="1" CenterX="200" />
            </Grid.RenderTransform>
            <!--<TextBlock Text="{Binding Id}" Foreground="Orange" />-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Image x:Name="brandIco" VerticalAlignment="Top" Margin="2,1"
                   Visibility="{Binding Source={x:Static loc:Settings.Default}, Path=showBrand, Mode=OneWay, Converter={StaticResource b2v}}"
                   Width="{Binding Source={x:Static loc:Settings.Default}, Path=GlobalBH, Mode=OneWay}" 
                   Source="{Binding Path=Source.Id, Converter={StaticResource bc}}" />

            <ctrl:TextControl x:Name="txt" Grid.Column="1" 
                              Text="{Binding}" Foreground="Black" />

            <TextBlock Text="{Binding Id}" Foreground="Orange" Grid.Column="2" />
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ToMe}" Value="True">
                <Setter TargetName="txt" Property="Foreground" Value="#711544" />
            </DataTrigger>

            <EventTrigger RoutedEvent="Loaded">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="ScaleX" 
                                             Storyboard.TargetName="scale"
                                            From="4" To="1"
                                            Duration="0:0:00.4">

                            </DoubleAnimation>

                            <DoubleAnimation Storyboard.TargetProperty="ScaleY" 
                                             Storyboard.TargetName="scale"
                                            From="4" To="1"
                                            Duration="0:0:00.4">

                            </DoubleAnimation>


                            <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                             Storyboard.TargetName="root"
                                            From="0" To="1"
                                            Duration="0:0:00.4">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="WindowHeaderStyle" TargetType="{x:Type Label}" >
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="5,1" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Arial, Helvetica, Sans-serif" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Foreground" Value="#141E4E" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <!--<Setter Property="TextOptions.TextHintingMode" Value="Fixed" />-->
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>


    <!-- Главное окно -->
    <Style TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border BorderBrush="{StaticResource BorderBackground}" 
                            Background="#dddddd" CornerRadius="5"
                            BorderThickness="1" 
                            Opacity="{Binding Source={x:Static loc:Settings.Default}, Path=GlobalAlpha, Mode=OneWay}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ctrl:MessageTemplateSelector x:Key="DefaultMTSelector"
                                  DefaultTemplate="{StaticResource MessageTemplate}" />

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ContentPresenter Margin="0,2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="BrandIcon">
        <Border BorderThickness="1" Padding="1" Margin="2,0"
                Background="White" ToolTip="{Binding Header}"
                BorderBrush="{StaticResource BorderBackground}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="18" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Image x:Name="brandIco" Margin="1,0"
                       Source="{Binding Path=Id, Converter={StaticResource bc}}" />

                <TextBlock Text="{Binding Path=ViewersCount}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Grid.Column="1" Foreground="Black" />

                <Button Style="{StaticResource SmallButton}" Content="r"
                        Command="{Binding}"
                        Grid.Column="2" Width="16" Foreground="#222222" />
            </Grid>
        </Border>
    </DataTemplate>

    <Style TargetType="{x:Type ctrl:ChatContainerControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:ChatContainerControl}">
                    <Grid Margin="2,1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <ListBox x:Name="PART_Header" 
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                 Template="{StaticResource HeaderContent}"
                                 ItemsSource="{Binding Sources}" Margin="1"
                                 ItemTemplate="{StaticResource BrandIcon}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"
                                                IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>

                        <StackPanel x:Name="headerButtons" Opacity="0.0"
                                    Orientation="Horizontal" HorizontalAlignment="Right" Margin="1">
                            <Button x:Name="PART_OptionsButton" Width="24" Margin="1" Content="~" />
                            <Button x:Name="PART_CloseButton" Width="24" Margin="1" Content="r" />
                        </StackPanel>

                        <ListBox x:Name="PART_Messages" VirtualizingPanel.VirtualizationMode="Recycling"
                                 Template="{StaticResource SystemChatContent}" 
                                 ItemsSource="{Binding Messages}"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                 ScrollViewer.CanContentScroll="False"
                                 ItemTemplateSelector="{StaticResource DefaultMTSelector}"
                                 Grid.Row="1" Margin="2">
                        </ListBox>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1.0" Duration="00:00:00.4" 
                                                     Storyboard.TargetName="headerButtons" 
                                                     Storyboard.TargetProperty="Opacity" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="0.0" Duration="00:00:00.4" 
                                                     Storyboard.TargetName="headerButtons" 
                                                     Storyboard.TargetProperty="Opacity" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>